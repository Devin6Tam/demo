<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.mzbloc.demo</groupId>
		<artifactId>demo</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.mzbloc.demo.sample107</groupId>
	<artifactId>demo-sample107</artifactId>
	<version>0.0.1</version>
	<name>demo-sample107</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- 应用监控 开放端点查看-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<!-- 通过远程脚本（SSH、TELNET）监控和管理我们的应用 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-remote-shell</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--boot 启动需要依赖插件-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.2.0</version>
				<configuration>
					<serverId>docker-hub</serverId>
					<dockerHost>http://192.168.190.180:2375</dockerHost>
					<!-- 此处采用公用注册中心 -->
					<registryUrl>https://index.docker.io/v1/</registryUrl>
					<baseImage>txtxw/java</baseImage>
					<imageName>txtxw/${project.name}:${project.version}</imageName>
					<forceTags>true</forceTags>
					<maintainer>txtxw txtxw@163.com</maintainer>
					<volumes>
						<volume>/tmp</volume>
					</volumes>
					<workdir>/data0/java</workdir>
					<exposes>18888</exposes>
					<cmd>["java","-version"]</cmd>
					<entryPoint>["java","-Djava.security.egd=file:/dev/urandom","-jar","${project.build.finalName}.jar","--server.port=18888"]</entryPoint>
					<resources>
						<resource>
							<!-- 执行目标工作目录 -->
							<targetPath>/data0/java</targetPath>
							<!--用于指定需要复制的根目录，${project.build.directory}表示target目录-->
							<directory>${project.build.directory}</directory>
							<!--用于指定需要复制的文件。${project.build.finalName}.jar指的是打包后的jar包文件。-->
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
